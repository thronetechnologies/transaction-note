name: Build and deploy an app to AKS with Helm

env:
  AZURE_CONTAINER_REGISTRY: transfernowregistry.azurecr.io   # set this to the name of your container registry 
  RESOURCE_GROUP: transfernow         # set this to the resource group containing your AKS cluster
  CONTAINER_NAME: microservice
  CLUSTER_NAME: transfernow-cluster           # set this to the name of your AKS cluster
  
  # If you bake using helm:
  ZOOKEEPER_CHART_PATH: ./cluster-config/zookeeper
  KAFKA_CHART_PATH: ./cluster-config/kafka
  REDIS_CHART_PATH: ./cluster-config/redis
  EXTERNAL_SECRET_CHART_PATH: ./cluster-config/external-secrets
  DB_CHART_PATH: ./cluster-config/databases                 # set this to the path to your helm file
  SERVICE_CHART_PATH: ./cluster-config/service-chart

on:
  push:
    branches: ["development"]
  workflow_dispatch:

jobs:
  devbuildImage:
    environment: dev
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Builds and pushes an image up to your Azure Container Registry
      - name: Build and push image to ACR
        run: |
          az acr build --image $AZURE_CONTAINER_REGISTRY/$CONTAINER_NAME:${{ github.sha }} --registry $AZURE_CONTAINER_REGISTRY -g $RESOURCE_GROUP .

  devdeploy:
    environment: dev
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [devbuildImage]
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Runs Helm to create manifest files
      - name: Bake deployment for zookeeper
        uses: azure/k8s-bake@v2
        with:
          renderEngine: "helm"
          helmChart: ${{ env.ZOOKEEPER_CHART_PATH }}
          arguments: |
            --debug
            --atomic 
            --namespace
            transfernow
            --name-template
            zookeeper
          helm-version: "latest"
        id: zookeeperbake

      # Runs Helm to create manifest files
      - name: Bake deployment for kafka
        uses: azure/k8s-bake@v2
        with:
          renderEngine: "helm"
          helmChart: ${{ env.KAFKA_CHART_PATH }}
          arguments: |
            --debug
            --atomic 
            --namespace
            transfernow
            --name-template
            kafka
          helm-version: "latest"
        id: kafkabake

      # Runs Helm to create manifest files
      - name: Bake deployment for redis
        uses: azure/k8s-bake@v2
        with:
          renderEngine: "helm"
          helmChart: ${{ env.REDIS_CHART_PATH }}
          arguments: |
            --debug
            --atomic 
            --namespace
            transfernow
            --name-template
            redis
          helm-version: "latest"
          overrideFiles: ./cluster-config/cluster-override-config/redis.yaml
        id: redisbake

      # Runs Helm to create manifest files
      - name: Bake deployment for external secrets
        uses: azure/k8s-bake@v2
        with:
          renderEngine: "helm"
          helmChart: ${{ env.EXTERNAL_SECRET_CHART_PATH }}
          arguments: |
            --debug
            --atomic 
            --namespace
            transfernow
            --name-template
            external-secrets
          helm-version: "latest"
        id: externalsecretsbake

      # Runs Helm to create manifest files
      - name: Bake deployment for database
        uses: azure/k8s-bake@v2
        with:
          renderEngine: "helm"
          helmChart: ${{ env.DB_CHART_PATH }}
          arguments: |
            --debug
            --atomic 
            --namespace
            transfernow
            --name-template
            transfernow
          overrideFiles: ./cluster-config/cluster-override-config/databases.yaml
          helm-version: "latest"
        id: dbbake

      # Runs Helm to create manifest files
      - name: Bake deployment for services
        uses: azure/k8s-bake@v2
        with:
          renderEngine: "helm"
          helmChart: ${{ env.SERVICE_CHART_PATH }}
          arguments: |
            --debug
            --atomic 
            --namespace
            transfernow
            --name-template
            transfernow
          overrideFiles: ./cluster-config/cluster-override-config/service-chart.yaml
          overrides: |
            services.image: ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME }}:${{ github.sha }}
          helm-version: "latest"
        id: servicebake

      # Deploys application based on manifest files from zookeeper step
      - name: Deploy zookeeper
        uses: Azure/k8s-deploy@v4
        with:
          namespace: transfernow
          action: deploy
          manifests: ${{ steps.zookeeperbake.outputs.manifestsBundle }}

      # Deploys application based on manifest files from kafka step
      - name: Deploy kafka
        uses: Azure/k8s-deploy@v4
        with:
          namespace: transfernow
          action: deploy
          manifests: ${{ steps.kafkabake.outputs.manifestsBundle }}

      # Deploys application based on manifest files from redis step
      - name: Deploy redis
        uses: Azure/k8s-deploy@v4
        with:
          namespace: transfernow
          action: deploy
          manifests: ${{ steps.redisbake.outputs.manifestsBundle }}

      - name: Deploy external secrets
        uses: Azure/k8s-deploy@v4
        with:
          namespace: transfernow
          action: deploy
          manifests: ${{ steps.externalsecretsbake.outputs.manifestsBundle }}

      # Deploys application based on manifest files from database step
      - name: Deploy databases
        uses: Azure/k8s-deploy@v4
        with:
          namespace: transfernow
          action: deploy
          manifests: ${{ steps.dbbake.outputs.manifestsBundle }}

      # Deploys application based on manifest files from service step
      - name: Deploy application
        uses: Azure/k8s-deploy@v4
        with:
          namespace: transfernow
          action: deploy
          manifests: ${{ steps.servicebake.outputs.manifestsBundle }}
          images: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME }}:${{ github.sha }}